services:
  kafka-gen:
    image: confluentinc/cp-kafka:7.3.3
    hostname: kafka-gen
    container_name: kafka-gen
    volumes:
      - ./volumes/kafka/scripts/create_cluster_id.sh:/tmp/create_cluster_id.sh
      - ./volumes/kafka/clusterID:/tmp/clusterID
    command: "bash -c '/tmp/create_cluster_id.sh'"

  kafka1:
    depends_on:
      - kafka-gen
    image: confluentinc/cp-kafka:7.3.3
    hostname: kafka1
    ports:
      - "39092:39092"
    environment:
      KAFKA_LISTENERS: BROKER://kafka1:19092,EXTERNAL://kafka1:39092,CONTROLLER://kafka1:9093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka1:19092,EXTERNAL://kafka1:39092
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
    volumes:
      - ./volumes/kafka/scripts/update_run.sh:/tmp/update_run.sh
      - ./volumes/kafka/clusterID:/tmp/clusterID
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"

  kafka2:
    depends_on:
      - kafka-gen
    image: confluentinc/cp-kafka:7.3.3
    hostname: kafka2
    ports:
      - "39093:39093"
    environment:
      KAFKA_LISTENERS: BROKER://kafka2:19093,EXTERNAL://kafka2:39093,CONTROLLER://kafka2:9093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka2:19093,EXTERNAL://kafka2:39093
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_NODE_ID: 2
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
      KAFKA_METADATA_LOG_SEGMENT_MS: 15000
      KAFKA_METADATA_MAX_RETENTION_MS: 1200000
      KAFKA_METADATA_LOG_MAX_RECORD_BYTES_BETWEEN_SNAPSHOTS: 2800
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
    volumes:
      - ./volumes/kafka/scripts/update_run.sh:/tmp/update_run.sh
      - ./volumes/kafka/clusterID:/tmp/clusterID
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"

  kafka3:
    depends_on:
      - kafka-gen
    image: confluentinc/cp-kafka:7.3.3
    hostname: kafka3
    ports:
      - "39094:39094"
    environment:
      KAFKA_LISTENERS: BROKER://kafka3:19094,EXTERNAL://kafka3:39094,CONTROLLER://kafka3:9093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka3:19094,EXTERNAL://kafka3:39094
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_NODE_ID: 3
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
      KAFKA_METADATA_LOG_SEGMENT_MS: 15000
      KAFKA_METADATA_MAX_RETENTION_MS: 1200000
      KAFKA_METADATA_LOG_MAX_RECORD_BYTES_BETWEEN_SNAPSHOTS: 2800
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
    volumes:
      - ./volumes/kafka/scripts/update_run.sh:/tmp/update_run.sh
      - ./volumes/kafka/clusterID:/tmp/clusterID
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"

  init-kafka-topics:
    image: confluentinc/cp-kafka:7.3.3
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka1:39092 --list

      echo -e 'Creating kafka topic: application.logs'
      kafka-topics --bootstrap-server kafka1:39092 --create --if-not-exists --topic application.logs --replication-factor 2 --partitions 6

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka1:39092 --list
      "

  grafana:
    image: grafana/grafana:9.3.2
    ports:
      - 3000:3000
    volumes:
      - ./volumes/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./volumes/grafana/dashboards:/var/lib/grafana/dashboards
    env_file:
      - ./envs/grafana/.env

  loki:
    image: grafana/loki:2.9.3
    ports:
      - "3100:3100"
    volumes:
      - ./volumes/loki:/mnt/config/
    command: -config.file=/mnt/config/loki-config.yaml

  prometheus:
    image: prom/prometheus:v2.41.0
    volumes:
      - ./volumes/prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090

  promtail:
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    image: grafana/promtail:2.9.3
    restart: always
    volumes:
      - ./volumes/promtail:/etc/promtail
    command:
      - "--config.file=/etc/promtail/config.yaml"

  init_tempo:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./volumes/tempo:/var/tempo

  tempo:
    image: *tempoImage
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./volumes/tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "14268:14268" # jaeger ingest
      - "3200:3200" # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
      - "9411:9411" # zipkin
    depends_on:
      - init_tempo
